/* tslint:disable */
/* eslint-disable */
/**
 * Collins API
 * This site provides details on the various ways that you can integrate with Collins. Not sure you want to be here after all? Check out whatâ€™s new on the [London Bar Scene](https://www.designmynight.com/london/new-bar-spy) instead. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Details about the booking type this booking is for.
 * @export
 * @interface ViewBookingType
 */
export interface ViewBookingType {
    /**
     * The ID of the booking type.
     * @type {string}
     * @memberof ViewBookingType
     */
    id?: string;
    /**
     * The name of the booking type.
     * @type {string}
     * @memberof ViewBookingType
     */
    name?: string;
    /**
     * Whether this booking type is a guestlist type.
     * @type {boolean}
     * @memberof ViewBookingType
     */
    guestlist?: boolean;
    /**
     * Whether this booking type is a private hire type.
     * @type {boolean}
     * @memberof ViewBookingType
     */
    privateHire?: boolean;
    /**
     * The value of this booking type.
     * @type {number}
     * @memberof ViewBookingType
     */
    value?: number | null;
}

export function ViewBookingTypeFromJSON(json: any): ViewBookingType {
    return ViewBookingTypeFromJSONTyped(json, false);
}

export function ViewBookingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewBookingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'guestlist': !exists(json, 'guestlist') ? undefined : json['guestlist'],
        'privateHire': !exists(json, 'private_hire') ? undefined : json['private_hire'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function ViewBookingTypeToJSON(value?: ViewBookingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'guestlist': value.guestlist,
        'private_hire': value.privateHire,
        'value': value.value,
    };
}


