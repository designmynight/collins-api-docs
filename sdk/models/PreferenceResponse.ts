/* tslint:disable */
/* eslint-disable */
/**
 * Collins API
 * This site provides details on the various ways that you can integrate with Collins. Not sure you want to be here after all? Check out whatâ€™s new on the [London Bar Scene](https://www.designmynight.com/london/new-bar-spy) instead. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PreferenceResponse
 */
export interface PreferenceResponse {
    /**
     * The ID of this marketing preference
     * @type {string}
     * @memberof PreferenceResponse
     */
    id?: string;
    /**
     * The name of this marketing preference
     * @type {string}
     * @memberof PreferenceResponse
     */
    name?: string;
    /**
     * A description of this marketing preference
     * @type {string}
     * @memberof PreferenceResponse
     */
    description?: string;
    /**
     * The date when this marketing preference was created
     * @type {Date}
     * @memberof PreferenceResponse
     */
    createdDate?: Date;
}

export function PreferenceResponseFromJSON(json: any): PreferenceResponse {
    return PreferenceResponseFromJSONTyped(json, false);
}

export function PreferenceResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PreferenceResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'createdDate': !exists(json, 'created_date') ? undefined : (new Date(json['created_date'])),
    };
}

export function PreferenceResponseToJSON(value?: PreferenceResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'created_date': value.createdDate === undefined ? undefined : (value.createdDate.toISOString().substr(0,10)),
    };
}


