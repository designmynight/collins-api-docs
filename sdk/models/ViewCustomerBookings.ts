/* tslint:disable */
/* eslint-disable */
/**
 * Collins API
 * This site provides details on the various ways that you can integrate with Collins. Not sure you want to be here after all? Check out whatâ€™s new on the [London Bar Scene](https://www.designmynight.com/london/new-bar-spy) instead. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ViewCustomerBookings
 */
export interface ViewCustomerBookings {
    /**
     * The ID of the booking
     * @type {string}
     * @memberof ViewCustomerBookings
     */
    id?: string;
    /**
     * The date of the booking
     * @type {Date}
     * @memberof ViewCustomerBookings
     */
    date?: Date;
    /**
     * The venue ID this booking is for
     * @type {string}
     * @memberof ViewCustomerBookings
     */
    venueId?: string;
    /**
     * The number of people the booking is for
     * @type {number}
     * @memberof ViewCustomerBookings
     */
    numPeople?: number;
    /**
     * The status of the booking
     * @type {string}
     * @memberof ViewCustomerBookings
     */
    status?: string;
}

export function ViewCustomerBookingsFromJSON(json: any): ViewCustomerBookings {
    return ViewCustomerBookingsFromJSONTyped(json, false);
}

export function ViewCustomerBookingsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewCustomerBookings {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'venueId': !exists(json, 'venue_id') ? undefined : json['venue_id'],
        'numPeople': !exists(json, 'num_people') ? undefined : json['num_people'],
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function ViewCustomerBookingsToJSON(value?: ViewCustomerBookings | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'date': value.date === undefined ? undefined : (value.date.toISOString()),
        'venue_id': value.venueId,
        'num_people': value.numPeople,
        'status': value.status,
    };
}


