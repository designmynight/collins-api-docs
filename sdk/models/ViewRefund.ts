/* tslint:disable */
/* eslint-disable */
/**
 * Collins API
 * This site provides details on the various ways that you can integrate with Collins. Not sure you want to be here after all? Check out whatâ€™s new on the [London Bar Scene](https://www.designmynight.com/london/new-bar-spy) instead. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    MoneyResponse,
    MoneyResponseFromJSON,
    MoneyResponseFromJSONTyped,
    MoneyResponseToJSON,
} from './';

/**
 * 
 * @export
 * @interface ViewRefund
 */
export interface ViewRefund {
    /**
     * The ID of the refund.
     * @type {string}
     * @memberof ViewRefund
     */
    id?: string;
    /**
     * 
     * @type {MoneyResponse}
     * @memberof ViewRefund
     */
    amount?: MoneyResponse;
    /**
     * Any notes that are attached to this refund.
     * @type {string}
     * @memberof ViewRefund
     */
    notes?: string | null;
    /**
     * The date when the deposit was created.
     * @type {Date}
     * @memberof ViewRefund
     */
    createdDate?: Date;
}

export function ViewRefundFromJSON(json: any): ViewRefund {
    return ViewRefundFromJSONTyped(json, false);
}

export function ViewRefundFromJSONTyped(json: any, ignoreDiscriminator: boolean): ViewRefund {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'amount': !exists(json, 'amount') ? undefined : MoneyResponseFromJSON(json['amount']),
        'notes': !exists(json, 'notes') ? undefined : json['notes'],
        'createdDate': !exists(json, 'created_date') ? undefined : (new Date(json['created_date'])),
    };
}

export function ViewRefundToJSON(value?: ViewRefund | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'amount': MoneyResponseToJSON(value.amount),
        'notes': value.notes,
        'created_date': value.createdDate === undefined ? undefined : (value.createdDate.toISOString()),
    };
}


